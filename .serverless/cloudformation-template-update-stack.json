{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CreateAssociadoLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-createAssociado"
      }
    },
    "ListAssociadosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-listAssociados"
      }
    },
    "CreateAgendamentosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-createAgendamentos"
      }
    },
    "ListAgendamentosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-listAgendamentos"
      }
    },
    "CreateAtendimentosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-createAtendimentos"
      }
    },
    "ListAtendimentosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-listAtendimentos"
      }
    },
    "CreateConveniadosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-createConveniados"
      }
    },
    "ListConveniadosLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-listConveniados"
      }
    },
    "CreatePrestadoresLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-createPrestadores"
      }
    },
    "ListPrestadoresLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/gisa-api-dev-listPrestadores"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "gisa-api",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gisa-api-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/gisa-api-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-west-2",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "table/gisa-api-dev-associados"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-west-2",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "table/gisa-api-dev-agendamentos"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-west-2",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "table/gisa-api-dev-atendimentos"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-west-2",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "table/gisa-api-dev-conveniados"
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        ":",
                        [
                          "arn",
                          "aws",
                          "dynamodb",
                          "us-west-2",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          "table/gisa-api-dev-prestadores"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "gisa-api",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CreateAssociadoLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "associados.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-createAssociado",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateAssociadoLogGroup"
      ]
    },
    "ListAssociadosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "associados.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-listAssociados",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ListAssociadosLogGroup"
      ]
    },
    "CreateAgendamentosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "agendamentos.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-createAgendamentos",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateAgendamentosLogGroup"
      ]
    },
    "ListAgendamentosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "agendamentos.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-listAgendamentos",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ListAgendamentosLogGroup"
      ]
    },
    "CreateAtendimentosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "atendimentos.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-createAtendimentos",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateAtendimentosLogGroup"
      ]
    },
    "ListAtendimentosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "atendimentos.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-listAtendimentos",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ListAtendimentosLogGroup"
      ]
    },
    "CreateConveniadosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "conveniados.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-createConveniados",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateConveniadosLogGroup"
      ]
    },
    "ListConveniadosLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "conveniados.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-listConveniados",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ListConveniadosLogGroup"
      ]
    },
    "CreatePrestadoresLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "prestadores.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-createPrestadores",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreatePrestadoresLogGroup"
      ]
    },
    "ListPrestadoresLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/gisa-api/dev/1642724566236-2022-01-21T00:22:46.236Z/gisa-api.zip"
        },
        "Handler": "prestadores.handler",
        "Runtime": "nodejs14.x",
        "FunctionName": "gisa-api-dev-listPrestadores",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ASSOCIADOS_TABLE": "gisa-api-dev-associados",
            "AGENDAMENTOS_TABLE": "gisa-api-dev-agendamentos",
            "ATENDIMENTOS_TABLE": "gisa-api-dev-atendimentos",
            "CONVENIADOS_TABLE": "gisa-api-dev-conveniados",
            "PRESTADORES_TABLE": "gisa-api-dev-prestadores"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ListPrestadoresLogGroup"
      ]
    },
    "CreateAssociadoLambdaVersiondxb5UYNWv7STzwAuQwVINZhdGasKPoECbfQcf8aeQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateAssociadoLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "CreateAgendamentosLambdaVersionN03IPPeWm2EF7GbEbQlcJJRhAzP1mfnBRnXbww26HYM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateAgendamentosLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "ListAssociadosLambdaVersiondMw3LmeU3WP09t7N9H03jKAmGaEiHHH7gixbFkoo0Pk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ListAssociadosLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "CreateAtendimentosLambdaVersionPmlP3HRjmrOu05e80dLBqKjy1h2RrJA0Sdm9aJH0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateAtendimentosLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "ListAgendamentosLambdaVersionIszPyS4zNU8FQ3Yw2uEq2Q6TUyiOWsBuS26ZAw3kY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ListAgendamentosLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "ListAtendimentosLambdaVersiondTyoHwR0HWCjRUMD4Wv2xjJ84KrjO0YJWRq5opFWoQY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ListAtendimentosLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "CreateConveniadosLambdaVersionoRkyYQNTW9RF3BUSeBLeeTNFCOgVoleMC9DyEutSZM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateConveniadosLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "ListConveniadosLambdaVersion85MIm40ZnHuOAu8pAs1nrqTlqKtSbym9QCdxbyWqgpQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ListConveniadosLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "CreatePrestadoresLambdaVersionAPS4AcHGIclIqul7fhCifG9pAgoRcAjlBwnIoljaBs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreatePrestadoresLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "ListPrestadoresLambdaVersionMDmEigD9pMs7Nvm2qcpcM6t5gDTQFrT3C3hNkgId4lM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ListPrestadoresLambdaFunction"
        },
        "CodeSha256": "DGgsBJ60AHTI0NxWN092Y1G1aleRRM2E2JgbPOr/QCc="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-gisa-api",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceAssociados": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "associados",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceAgendamentos": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "agendamentos",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceAtendimentos": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "atendimentos",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceConveniados": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "conveniados",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePrestadores": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "prestadores",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAssociadosPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAssociados"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateAssociadoLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateAssociadoLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAssociadosGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAssociados"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListAssociadosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ListAssociadosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAgendamentosPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAgendamentos"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateAgendamentosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateAgendamentosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAgendamentosGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAgendamentos"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListAgendamentosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ListAgendamentosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAtendimentosPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAtendimentos"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateAtendimentosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateAtendimentosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAtendimentosGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAtendimentos"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListAtendimentosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ListAtendimentosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodConveniadosPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceConveniados"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateConveniadosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateConveniadosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodConveniadosGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceConveniados"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListConveniadosLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ListConveniadosLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPrestadoresPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePrestadores"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreatePrestadoresLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreatePrestadoresLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPrestadoresGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePrestadores"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListPrestadoresLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ListPrestadoresLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1642724563492": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodAssociadosPost",
        "ApiGatewayMethodAssociadosGet",
        "ApiGatewayMethodAgendamentosPost",
        "ApiGatewayMethodAgendamentosGet",
        "ApiGatewayMethodAtendimentosPost",
        "ApiGatewayMethodAtendimentosGet",
        "ApiGatewayMethodConveniadosPost",
        "ApiGatewayMethodConveniadosGet",
        "ApiGatewayMethodPrestadoresPost",
        "ApiGatewayMethodPrestadoresGet"
      ]
    },
    "CreateAssociadoLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateAssociadoLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ListAssociadosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListAssociadosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateAgendamentosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateAgendamentosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ListAgendamentosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListAgendamentosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateAtendimentosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateAtendimentosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ListAtendimentosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListAtendimentosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateConveniadosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateConveniadosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ListConveniadosLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListConveniadosLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreatePrestadoresLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreatePrestadoresLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ListPrestadoresLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ListPrestadoresLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AssociadosTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "gisa-api-dev-associados",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "N"
          },
          {
            "AttributeName": "cpf",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "cpf",
            "KeyType": "RANGE"
          }
        ]
      }
    },
    "AgendamentosTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "gisa-api-dev-agendamentos",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "N"
          },
          {
            "AttributeName": "data",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "data",
            "KeyType": "RANGE"
          }
        ]
      }
    },
    "AtendimentosTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "gisa-api-dev-atendimentos",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "N"
          },
          {
            "AttributeName": "data",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "data",
            "KeyType": "RANGE"
          }
        ]
      }
    },
    "ConveniadosTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "gisa-api-dev-conveniados",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "N"
          },
          {
            "AttributeName": "cnpj",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "cnpj",
            "KeyType": "RANGE"
          }
        ]
      }
    },
    "PrestadoresTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "gisa-api-dev-prestadores",
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "N"
          },
          {
            "AttributeName": "cpf",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "cpf",
            "KeyType": "RANGE"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-ServerlessDeploymentBucketName"
      }
    },
    "CreateAssociadoLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateAssociadoLambdaVersiondxb5UYNWv7STzwAuQwVINZhdGasKPoECbfQcf8aeQ"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-CreateAssociadoLambdaFunctionQualifiedArn"
      }
    },
    "CreateAgendamentosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateAgendamentosLambdaVersionN03IPPeWm2EF7GbEbQlcJJRhAzP1mfnBRnXbww26HYM"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-CreateAgendamentosLambdaFunctionQualifiedArn"
      }
    },
    "ListAssociadosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ListAssociadosLambdaVersiondMw3LmeU3WP09t7N9H03jKAmGaEiHHH7gixbFkoo0Pk"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-ListAssociadosLambdaFunctionQualifiedArn"
      }
    },
    "CreateAtendimentosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateAtendimentosLambdaVersionPmlP3HRjmrOu05e80dLBqKjy1h2RrJA0Sdm9aJH0"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-CreateAtendimentosLambdaFunctionQualifiedArn"
      }
    },
    "ListAgendamentosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ListAgendamentosLambdaVersionIszPyS4zNU8FQ3Yw2uEq2Q6TUyiOWsBuS26ZAw3kY"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-ListAgendamentosLambdaFunctionQualifiedArn"
      }
    },
    "ListAtendimentosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ListAtendimentosLambdaVersiondTyoHwR0HWCjRUMD4Wv2xjJ84KrjO0YJWRq5opFWoQY"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-ListAtendimentosLambdaFunctionQualifiedArn"
      }
    },
    "CreateConveniadosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateConveniadosLambdaVersionoRkyYQNTW9RF3BUSeBLeeTNFCOgVoleMC9DyEutSZM"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-CreateConveniadosLambdaFunctionQualifiedArn"
      }
    },
    "ListConveniadosLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ListConveniadosLambdaVersion85MIm40ZnHuOAu8pAs1nrqTlqKtSbym9QCdxbyWqgpQ"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-ListConveniadosLambdaFunctionQualifiedArn"
      }
    },
    "CreatePrestadoresLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreatePrestadoresLambdaVersionAPS4AcHGIclIqul7fhCifG9pAgoRcAjlBwnIoljaBs"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-CreatePrestadoresLambdaFunctionQualifiedArn"
      }
    },
    "ListPrestadoresLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ListPrestadoresLambdaVersionMDmEigD9pMs7Nvm2qcpcM6t5gDTQFrT3C3hNkgId4lM"
      },
      "Export": {
        "Name": "sls-gisa-api-dev-ListPrestadoresLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-gisa-api-dev-ServiceEndpoint"
      }
    }
  }
}