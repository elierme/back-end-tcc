# serverless.yml

service: gisa-api

custom:
  associadosTableName: '${self:service}-${self:provider.stage}-associados'
  associadosTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.associadosTableName}
  agendamentosTableName: '${self:service}-${self:provider.stage}-agendamentos'
  agendamentosTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.agendamentosTableName}
  atendimentosTableName: '${self:service}-${self:provider.stage}-atendimentos'
  atendimentosTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.atendimentosTableName}
  conveniadosTableName: '${self:service}-${self:provider.stage}-conveniados'
  conveniadosTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.conveniadosTableName}
  prestadoresTableName: '${self:service}-${self:provider.stage}-prestadores'
  prestadoresTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.prestadoresTableName}
  planosTableName: '${self:service}-${self:provider.stage}-planos'
  planosTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.planosTableName}
  procedimentosTableName: '${self:service}-${self:provider.stage}-procedimentos'
  procedimentosTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.procedimentosTableName}
  tokensTableName: '${self:service}-${self:provider.stage}-tokens'
  tokensTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - us-west-2
      - Ref: AWS::AccountId
      - table/${self:custom.tokensTableName}
  
  

provider:
  lambdaHashingVersion: 20200924
  name: aws
  runtime: nodejs14.x
  stage: prod
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - ${self:custom.associadosTableArn}       
        - ${self:custom.agendamentosTableArn}
        - ${self:custom.atendimentosTableArn}
        - ${self:custom.conveniadosTableArn}
        - ${self:custom.prestadoresTableArn}
        - ${self:custom.planosTableArn}
        - ${self:custom.procedimentosTableArn}
        - ${self:custom.tokensTableArn}
  environment:
    ASSOCIADOS_TABLE: ${self:custom.associadosTableName}  
    AGENDAMENTOS_TABLE: ${self:custom.agendamentosTableName}
    ATENDIMENTOS_TABLE: ${self:custom.atendimentosTableName}
    CONVENIADOS_TABLE: ${self:custom.conveniadosTableName}
    PRESTADORES_TABLE: ${self:custom.prestadoresTableName}
    PLANOS_TABLE: ${self:custom.planosTableName}
    PROCEDIMENTOS_TABLE: ${self:custom.procedimentosTableName}
    TOKENS_TABLE: ${self:custom.tokensTableName}



functions:
  createAssociado:
    handler: associados.handler
    events:
      - http: 'POST /associados'
  listAssociados:
    handler: associados.handler
    events:
      - http: 'GET /associados'
  getAssociado:
    handler: associados.handler
    events:
      - http: 'GET /associados/{cpf}'
  createAgendamentos:
    handler: agendamentos.handler
    events:
      - http: 'POST /agendamentos'
  listAgendamentos:
    handler: agendamentos.handler
    events:
      - http: 'GET /agendamentos'
  listAgendamentosOfConveniados:
    handler: agendamentos.handler
    events:
      - http: 'GET /conveniados/{id}/agendamentos'
  listAgendamentosOfPrestadores:
    handler: agendamentos.handler
    events:
      - http: 'GET /prestadores/{id}/agendamentos'
  createAtendimentos:
    handler: atendimentos.handler
    events:
      - http: 'POST /atendimentos'
  listAtendimentos:
    handler: atendimentos.handler
    events:
      - http: 'GET /atendimentos'
  listAtendimentosOfConveniados:
    handler: atendimentos.handler
    events:
      - http: 'GET /conveniados/{id}/atendimentos'
  listAtendimentosOfPrestadores:
    handler: atendimentos.handler
    events:
      - http: 'GET /prestadores/{id}/atendimentos'
  createConveniados:
    handler: conveniados.handler
    events:
      - http: 'POST /conveniados'
  updateConveniados:
    handler: conveniados.handler
    events:
      - http: 'PUT /conveniados/{id}'
  listConveniados:
    handler: conveniados.handler
    events:
      - http: 'GET /conveniados'  
  updatePrestadores:
    handler: prestadores.handler
    events:
      - http: 'PUT /prestadores/{id}'    
  listPrestadores:
    handler: prestadores.handler
    events:
      - http: 'GET /prestadores'
  listPrestadoresOfConveniado:
    handler: prestadores.handler
    events:
      - http: 'GET /conveniados/{id}/prestadores'
  createPrestadoresOfConveniado:
    handler: prestadores.handler
    events:
      - http: 'POST /conveniados/{id}/prestadores'
  listPlanos:
    handler: planos.handler
    events:
      - http: 'GET /planos'
  listProcedimentosOfPlanos:
    handler: procedimentos.handler
    events:
      - http: 'GET /planos/{id}/procedimentos'
  confirmationToken:
    handler: tokens.handler
    events:
      - http: 'PUT /tokens/{id}'
  

resources:
  # DynamoDB
  - ${file(resources/dynamodb-table.yml)}